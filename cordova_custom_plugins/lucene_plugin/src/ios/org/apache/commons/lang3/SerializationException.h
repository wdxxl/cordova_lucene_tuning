//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-sources.jar!org/apache/commons/lang3/SerializationException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3SerializationException")
#ifdef RESTRICT_OrgApacheCommonsLang3SerializationException
#define INCLUDE_ALL_OrgApacheCommonsLang3SerializationException 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3SerializationException 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3SerializationException

#if !defined (OrgApacheCommonsLang3SerializationException_) && (INCLUDE_ALL_OrgApacheCommonsLang3SerializationException || defined(INCLUDE_OrgApacheCommonsLang3SerializationException))
#define OrgApacheCommonsLang3SerializationException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@interface OrgApacheCommonsLang3SerializationException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)msg;

- (instancetype)initWithNSString:(NSString *)msg
                 withNSException:(NSException *)cause;
#define withJavaLangThrowable withNSException

- (instancetype)initWithNSException:(NSException *)cause;
#define initWithJavaLangThrowable initWithNSException

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3SerializationException)

FOUNDATION_EXPORT void OrgApacheCommonsLang3SerializationException_init(OrgApacheCommonsLang3SerializationException *self);

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationException *new_OrgApacheCommonsLang3SerializationException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationException *create_OrgApacheCommonsLang3SerializationException_init();

FOUNDATION_EXPORT void OrgApacheCommonsLang3SerializationException_initWithNSString_(OrgApacheCommonsLang3SerializationException *self, NSString *msg);

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationException *new_OrgApacheCommonsLang3SerializationException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationException *create_OrgApacheCommonsLang3SerializationException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void OrgApacheCommonsLang3SerializationException_initWithNSException_(OrgApacheCommonsLang3SerializationException *self, NSException *cause);

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationException *new_OrgApacheCommonsLang3SerializationException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationException *create_OrgApacheCommonsLang3SerializationException_initWithNSException_(NSException *cause);

FOUNDATION_EXPORT void OrgApacheCommonsLang3SerializationException_initWithNSString_withNSException_(OrgApacheCommonsLang3SerializationException *self, NSString *msg, NSException *cause);

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationException *new_OrgApacheCommonsLang3SerializationException_initWithNSString_withNSException_(NSString *msg, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3SerializationException *create_OrgApacheCommonsLang3SerializationException_initWithNSString_withNSException_(NSString *msg, NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3SerializationException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3SerializationException")
